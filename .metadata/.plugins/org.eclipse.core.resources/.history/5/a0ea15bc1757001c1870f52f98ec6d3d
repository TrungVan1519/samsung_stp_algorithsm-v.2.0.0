package stp.arrays.matran8huong_quanmaduocchon;

import java.io.FileInputStream;
import java.util.Iterator;
import java.util.Scanner;

import utils.MyUtils;

public class Solution {

	static int T;

	static int size, K, M, D;
	static char[][] arr;
	static int[] Ks, Ms, Ds;

	public static void main(String[] args) {
		try {
			System.setIn(new FileInputStream(MyUtils.getAbsolutePath("stp\\arrays\\matran8huong_quanmaduocchon")));
			Scanner s = new Scanner(System.in);

			T = s.nextInt();
			for (int tc = 1; tc <= T; tc++) {
				size = s.nextInt();
				K = s.nextInt();
				M = s.nextInt();
				D = s.nextInt();
				arr = new char[size][size];

				int limKs = K * 2;
				int limMs = M * 2;
				int limDs = D * 2;

				Ks = new int[limKs];
				Ms = new int[limMs];
				Ds = new int[limDs];

				// input
				for (int i = 0; i < limKs; i++) {
					Ks[i] = s.nextInt();
				}

				for (int i = 0; i < limMs; i++) {
					Ms[i] = s.nextInt();
				}

				for (int i = 0; i < limDs; i++) {
					Ds[i] = s.nextInt();
				}

				// fil Ks, Ms, Ds into arr
				for (int i = 0; i < limKs; i++) {
					if (i % 2 == 0) {
						arr[Ks[i]][Ks[i + 1]] = 'K';
					}
				}
				for (int i = 0; i < limMs; i++) {
					if (i % 2 == 0) {
						arr[Ms[i]][Ms[i + 1]] = 'M';
					}
				}
				for (int i = 0; i < limDs; i++) {
					if (i % 2 == 0) {
						arr[Ds[i]][Ds[i + 1]] = 'D';
					}
				}

				MyUtils.showMatrix(arr, size, size);
			}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}
