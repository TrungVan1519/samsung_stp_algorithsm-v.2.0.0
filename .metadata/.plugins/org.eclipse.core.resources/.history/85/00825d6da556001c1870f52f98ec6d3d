package stp.strings.mirrorstrings;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.Scanner;

import utils.MyUtils;

public class Solution {

	static int T;

	static String str;
	static int lenResult, countResult; 
	static String strResult;

	public static void main(String[] args) {
		try {
			System.setIn(new FileInputStream(MyUtils.getAbsolutePath("stp\\strings\\mirrorstrings")));
			Scanner s = new Scanner(System.in);

			T = s.nextInt();
			for (int tc = 1; tc <= T; tc++) {
				lenResult = -1;
				countResult = 0;
				strResult = "";

				// input
				str = s.next();

				// solve
				for (int i = 0; i < str.length(); i++) {
					for (int j = str.length() - 1; j >= i; j--) {
						if (str.charAt(i) != str.charAt(j)) {
							continue;
						}

						String tmp = str.substring(i, j + 1);
						if (check(tmp) && lenResult < tmp.length()) {
							lenResult = tmp.length();
							strResult = tmp;
						}
					}
				}
				
				if (lenResult == 1) {
					countResult = str.length();
				} else {
					for (int i = 0; i < str.length(); i++) {
						if (str.indexOf(strResult) != 1)) {
							countResult++;
						}
					}
				}
				
				System.out.println(lenResult +" "+ countResult);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	private static boolean check(String substring) {
		for (int i = 0; i < substring.length() / 2; i++) {
			if (substring.charAt(i) != substring.charAt(substring.length() - 1 - i)) {
				return false;
			}
		}
		return true;
	}
}
