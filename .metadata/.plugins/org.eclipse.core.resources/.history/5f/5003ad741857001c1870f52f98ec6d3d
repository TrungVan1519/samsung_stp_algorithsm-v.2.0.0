package stp.arrays.matran8huong_quanmaduocchon;

import java.io.FileInputStream;
import java.util.Iterator;
import java.util.Scanner;

import utils.MyUtils;

public class Solution {

	static int T;

	static int size, K, M, D;
	static char[][] arr;
	static int[] Ks, Ms, Ds;

	static int resCount, resX, resY;

	// -1-2 -2-1 -21 -12 12 21 2-1 1-2
	static int[] dx = { -1, -2, -2, -1, 1, 2, 2, 1 };
	static int[] dy = { -2, -1, 1, 2, 2, 1, -1, -2 };

	public static void main(String[] args) {
		try {
			System.setIn(new FileInputStream(MyUtils.getAbsolutePath("stp\\arrays\\matran8huong_quanmaduocchon")));
			Scanner s = new Scanner(System.in);

			T = s.nextInt();
			for (int tc = 1; tc <= T; tc++) {
				resCount = 0;
				resX = -1;
				resY = -1;

				size = s.nextInt();
				K = s.nextInt();
				M = s.nextInt();
				D = s.nextInt();
				arr = new char[size][size];

				int rowKs = K * 2;
				int rowMs = M * 2;
				int rowDs = D * 2;

				Ks = new int[rowKs];
				Ms = new int[rowMs];
				Ds = new int[rowDs];

				// input
				for (int i = 0; i < rowKs; i++) {
					Ks[i] = s.nextInt();
				}

				for (int i = 0; i < rowMs; i++) {
					Ms[i] = s.nextInt();
				}

				for (int i = 0; i < rowDs; i++) {
					Ds[i] = s.nextInt();
				}

				// fil Ks, Ms, Ds into arr
				for (int i = 0; i < rowKs; i++) {
					if (i % 2 == 0) {
						arr[Ks[i]][Ks[i + 1]] = 'K';
					}
				}
				for (int i = 0; i < rowMs; i++) {
					if (i % 2 == 0) {
						arr[Ms[i]][Ms[i + 1]] = 'M';
					}
				}
				for (int i = 0; i < rowDs; i++) {
					if (i % 2 == 0) {
						arr[Ds[i]][Ds[i + 1]] = 'D';
					}
				}
				
				MyUtils.showMatrix(arr, size, size);

				// solve
				for (int i = 0; i < size; i++) {
					for (int j = 0; j < size; j++) {
						if (arr[i][j] == 'K') {
							if (resCount < check(i, j)) {
								resCount = check(i, j);
								resX = i;
								resY = j;
							}
						}
					}
				}

				System.out.println("#" + tc + " " + resX + " " + resY + " " + resCount);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	private static int check(int x, int y) {
		int tx, ty;
		int count = 0;

		for (int i = 0; i < dx.length; i++) {
			tx = x + dx[i];
			ty = y + dy[i];

			if (tx < 0 || tx >= size || ty < 0 || ty >= size) {
				continue;
			}

			if (arr[tx][ty] == 'K' || arr[tx][ty] == 'M') {
				count++;
			}
		}

		System.out.println(x + " " + y + " " + count);

		return count;
	}
}
