package stp.arrays.matran4huong_hotelfloors;

import java.io.FileInputStream;
import java.util.Scanner;

import utils.MyUtils;

public class Solution {

	static int T;

	static int row, col;
	static char[][] arr;

	static int resPeople, resRoom;

	static int[] dx = { 0, -1, 0, 1 };
	static int[] dy = { -1, 0, 1, 0 };

	public static void main(String[] args) {
		try {
			System.setIn(new FileInputStream(MyUtils.getAbsolutePath("stp\\arrays\\matran4huong_hotelfloors")));
			Scanner s = new Scanner(System.in);

			T = s.nextInt();
			for (int tc = 1; tc <= T; tc++) {
				row = s.nextInt();
				col = s.nextInt();
				arr = new char[row][col];

				// input
				for (int i = 0; i < row; i++) {
					String str = s.next();
					for (int j = 0; j < col; j++) {
						arr[i][j] = str.charAt(j);
					}
				}

				// solve
				resPeople = 0;
				for (int i = 0; i < row; i++) {
					for (int j = 0; j < col; j++) {
						if (arr[i][j] == '*') {
							resPeople++;
						}
					}
				}

				for (int i = 1; i < row - 1; i++) {
					for (int j = 1; j < col - 1; j++) {
						if (arr[i][j] != '#') {
							resRoom++;
							fillRoom(i, j);
						}
					}
				}

				System.out.println(resPeople / resRoom);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	private static void fillRoom(int i, int j) {
		int tx, ty;

		for (int k = 0; k < arr.length; k++) {
			tx = i + dx[k];
			ty = j + dy[k];

			if (tx < 0 || tx >= row || ty < 0 || ty >= col) {
				break;
			}

			if (arr[tx][ty] != '#') {
				arr[tx][ty] = '#';
				fillRoom(tx, ty);
			}
		}

//		if (arr[i][j - 1] != '#') {
//			arr[i][j - 1] = '#';
//			fillRoom(i, j - 1);
//		}
//		if (arr[i - 1][j] != '#') {
//			arr[i - 1][j] = '#';
//			fillRoom(i - 1, j);
//		}
//		if (arr[i][j + 1] != '#') {
//			arr[i][j + 1] = '#';
//			fillRoom(i, j + 1);
//		}
//		if (arr[i + 1][j] != '#') {
//			arr[i + 1][j] = '#';
//			fillRoom(i + 1, j);
//		}
	}
}
